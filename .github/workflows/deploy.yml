name: CI/CD Deploy Taski

on:
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Yandex.Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.AUTHORIZATION }}
      - name: Build and push Docker image to Yandex.Cloud Container Registry
        env:
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sudo docker build -t cr.yandex/$CR_REGISTRY/frontend:$IMAGE_TAG ./frontend/
          sudo docker push cr.yandex/$CR_REGISTRY/frontend:$IMAGE_TAG
          sudo docker build -t cr.yandex/$CR_REGISTRY/backend:$IMAGE_TAG ./backend/
          sudo docker push cr.yandex/$CR_REGISTRY/backend:$IMAGE_TAG
          sudo docker build -t cr.yandex/$CR_REGISTRY/nginx:$IMAGE_TAG ./nginx/
          sudo docker push cr.yandex/$CR_REGISTRY/nginx:$IMAGE_TAG
      - name: Connect to VPC-Server
        uses: appleboy/ssh-action@master
        env:
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
        with:
          host: 84.201.171.27
          username: julie
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: | 
            echo $OAUTH_TOKEN|docker login --username oauth --password-stdin cr.yandex
            sudo docker kill $(docker ps -q) &> /dev/null
            sudo docker rmi -f $(docker images -qa)
            sudo docker system prune --all --force
            sudo docker run -p 3000:3000 -d cr.yandex/$CR_REGISTRY/frontend:${{ github.sha }}
            sudo docker run -p 8000:8000 -d cr.yandex/$CR_REGISTRY/backend:${{ github.sha }}
            sudo docker run -p 80:80 --net=host -d cr.yandex/$CR_REGISTRY/nginx:${{ github.sha }}
